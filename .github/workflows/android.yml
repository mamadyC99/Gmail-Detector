name: Android CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Create Gradle Wrapper
      run: |
        # Crear directorio gradle/wrapper si no existe
        mkdir -p gradle/wrapper
        
        # Crear archivo gradle-wrapper.properties
        cat > gradle/wrapper/gradle-wrapper.properties << EOF
        distributionBase=GRADLE_USER_HOME
        distributionPath=wrapper/dists
        distributionUrl=https\://services.gradle.org/distributions/gradle-8.0-bin.zip
        zipStoreBase=GRADLE_USER_HOME
        zipStorePath=wrapper/dists
        EOF
        
        # Crear script gradlew
        cat > gradlew << 'EOF'
        #!/bin/sh
        
        APP_NAME="Gradle"
        APP_BASE_NAME=${0##*/}
        
        # Resolve links: $0 may be a link
        PRG="$0"
        while [ -h "$PRG" ] ; do
            ls=`ls -ld "$PRG"`
            link=`expr "$ls" : '.*-> \(.*\)$'`
            if expr "$link" : '/.*' > /dev/null; then
                PRG="$link"
            else
                PRG=`dirname "$PRG"`"/$link"
            fi
        done
        
        SAVED="`pwd`"
        DIRNAME="`dirname \"$PRG\"`"
        cd "$DIRNAME"
        
        # Determine the Java command to use to start the JVM.
        if [ -n "$JAVA_HOME" ] ; then
            if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
                JAVACMD="$JAVA_HOME/jre/sh/java"
            else
                JAVACMD="$JAVA_HOME/bin/java"
            fi
            if [ ! -x "$JAVACMD" ] ; then
                die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME"
            fi
        else
            JAVACMD="java"
            which java >/dev/null 2>&1 || die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH."
        fi
        
        # Download Gradle if not present
        GRADLE_HOME="gradle/wrapper"
        GRADLE_JAR="$GRADLE_HOME/gradle-wrapper.jar"
        
        if [ ! -f "$GRADLE_JAR" ]; then
            echo "Downloading Gradle Wrapper..."
            mkdir -p "$GRADLE_HOME"
            curl -L -o "$GRADLE_JAR" "https://github.com/gradle/gradle/raw/HEAD/gradle/wrapper/gradle-wrapper.jar"
        fi
        
        # Execute Gradle
        exec "$JAVACMD" -classpath "$GRADLE_JAR" org.gradle.wrapper.GradleWrapperMain "$@"
        EOF
        
        # Dar permisos de ejecución
        chmod +x gradlew
        
        echo "✅ Gradle wrapper creado correctamente"

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Build with Gradle
      run: ./gradlew assembleDebug --stacktrace

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: gmail-detector-apk
        path: app/build/outputs/apk/debug/app-debug.apk
